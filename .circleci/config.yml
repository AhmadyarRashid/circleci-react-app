
version: 2

jobs:
  test:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - run: yarn test # Run tests.
      - run: yarn build # Build a production build to check if any warnings come up.

  deploy-dev:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "a6:2c:6d:9c:76:d7:a3:b8:9e:b5:e6:6e:f4:80:be:3b"
#      - run:
#          name: Deploy Over SSH
#          command: |
#            ssh $SSH_USER@$SSH_HOST
      - run: sudo ls

#      - restore_cache:
#          keys:
#            - v2-dependencies-{{ checksum "package.json" }}
#            # fallback to using the latest cache if no exact match is found
#            - v2-dependencies-

      - run: yarn install
      - run: node --version

#      - save_cache:
#          paths:
#            - node_modules
#          key: v2-dependencies-{{ checksum "package.json" }}

      # - run: yarn run deploy

  deploy-production:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      # - run: yarn run deploy

workflows:
  version: 2
  build-and-deploy:
   jobs:
     - test
     - deploy-dev:
         requires:
           - test
         filters:
           branches:
             only: dev
     - deploy-production:
         requires:
           - test
         filters:
           branches:
             only: master
