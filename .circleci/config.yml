
version: 2.1
orbs: 
  ssh-deployment: arturgontijo/ssh-deployment@1.1.20

jobs:
  test:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      - run: yarn test # Run tests.
      - run: yarn build # Build a production build to check if any warnings come up.
  
  deploy-dev:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}

      # - run: yarn run deploy

  deploy-production:
    docker:
      - image: node

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v2-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package.json" }}
      # - run: yarn run deploy

workflows:
  version: 2
  deploy_application:
    jobs:
      - ssh-deployment/deploy:
          ssh-host: 124.109.43.145
          ssh-user: ubuntu
          git-repo: circleci-react-app
          git-branch: master
          mainnet-port: '7000'
          run-command: node --version
          test-command: yarn run test
          # docker-test-files: 'Dockerfile, requirements.txt'
          docker-file-path: Dockerfile
          docker-image: node
          docker-container: node
  build-and-deploy:
   jobs:
     - test
     - deploy-dev:
         requires:
           - test
         filters:
           branches:
             only: dev
     - deploy-production:
         requires:
           - test
         filters:
           branches:
             only: master